{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayur.rathore\\\\Desktop\\\\js training\\\\Hospital Managment\\\\react\\\\hospital\\\\src\\\\component\\\\httpsecurecomponent.jsx\";\nimport React, { Component } from \"react\";\nimport { SecureCallService } from \"./secureservice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HttpCallComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clearReg = () => {\n      this.setState({\n        UserId: 0\n      });\n      this.setState({\n        RegUserName: \"\"\n      });\n      this.setState({\n        RegPAssword: \"\"\n      });\n    };\n\n    this.clearAuth = () => {\n      this.setState({\n        AuthUserName: \"\"\n      });\n      this.setState({\n        AuthPAssword: \"\"\n      });\n    };\n\n    this.handleInPutChanges = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n      this.validateInputs(evt.target.name, evt.target.value);\n    };\n\n    this.validateInputs = (name, value) => {\n      if (name === 'RegUserName') {\n        if (value.length === 0) {\n          this.setState({\n            isRegUserNameValid: false\n          });\n          this.setState({\n            isFormValid: false\n          });\n        } else {\n          this.setState({\n            isRegUserNameValid: true\n          });\n          this.setState({\n            isFormValid: true\n          });\n        }\n      }\n\n      if (name === 'RegPAssword') {\n        if (value.length === 0) {\n          this.setState({\n            isRegPAsswordValid: false\n          });\n          this.setState({\n            isFormValid: false\n          });\n        } else {\n          this.setState({\n            isRegPAsswordValid: true\n          });\n          this.setState({\n            isFormValid: true\n          });\n        }\n      }\n    };\n\n    this.state = {\n      UserId: 0,\n      RegUserName: \"\",\n      RegPAssword: \"\",\n      AuthUserName: \"\",\n      AuthPAssword: \"\",\n      message: \"\",\n      departments: [],\n      isRegUserNameValid: true,\n      isRegPAsswordValid: true,\n      isFormValid: true\n    };\n    this.serv = new SecureCallService();\n  }\n\n  register() {\n    let user = {\n      UserId: this.state.UserId,\n      UserName: this.state.RegUserName,\n      PAssword: this.state.RegPAssword\n    };\n    this.serv.registerUser(user).then(resp => {\n      this.setState({\n        message: resp.data.message\n      });\n    }).catch(error => {\n      this.setState({\n        message: `Error Occured ${error.message}`\n      });\n    });\n  }\n\n  auth() {\n    let user = {\n      UserName: this.state.AuthUserName,\n      PAssword: this.state.AuthPAssword\n    };\n    this.serv.authUser(user).then(resp => {\n      this.setState({\n        message: resp.data.message\n      });\n      sessionStorage.setItem(\"token\", resp.data.token);\n      alert();\n      this.props.history.push('/homepage');\n    }).catch(error => {\n      this.setState({\n        message: `Error Occured ${error.message}`\n      });\n    });\n  }\n\n  getValues() {\n    let token = sessionStorage.getItem(\"token\");\n\n    if (token === undefined) {\n      this.setState({\n        message: `Please send the Auth Header`\n      });\n    } else {\n      this.serv.getData(token).then(resp => {\n        this.setState({\n          departments: resp.data.message\n        });\n        this.setState({\n          message: `Data Received Successfully`\n        });\n      }).catch(error => {\n        this.setState({\n          message: `Error Occured ${error.message}`\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Register User \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"calculator card\",\n              style: {\n                width: 500\n              },\n              children: [\"UserId\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"UserId\",\n                onChange: this.handleInPutChanges.bind(this),\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 11\n              }, this), \"User Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"RegUserName\",\n                value: this.state.RegUserName,\n                onChange: this.handleInPutChanges.bind(this),\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 11\n              }, this), \"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                name: \"RegPAssword\",\n                value: this.state.RegPAssword,\n                onChange: this.handleInPutChanges.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-danger\",\n                hidden: this.state.isRegPAsswordValid,\n                children: \" The Password is Required \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                value: \"Clear\",\n                onClick: this.clearReg.bind(this),\n                className: \"btn btn-primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 110\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                value: \"Register\",\n                onClick: this.register.bind(this),\n                disabled: !this.state.isFormValid,\n                className: \"btn btn-success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"calculator card\",\n              style: {\n                width: 500\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Login user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 13\n              }, this), \"User Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"AuthUserName\",\n                className: \"form-control\",\n                value: this.state.AuthUserName,\n                onChange: this.handleInPutChanges.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 13\n              }, this), \"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"AuthPAssword\",\n                className: \"form-control\",\n                value: this.state.AuthPAssword,\n                onChange: this.handleInPutChanges.bind(this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                value: \"Clear\",\n                onClick: this.clearAuth.bind(this),\n                className: \"btn btn-primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                value: \"Login\",\n                onClick: this.auth.bind(this),\n                className: \"btn btn-success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"button\",\n                value: \"Get Data\",\n                onClick: this.getValues.bind(this),\n                className: \"btn btn-danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: JSON.stringify(this.state.departments)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"container\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: this.state.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default HttpCallComponent;","map":{"version":3,"sources":["C:/Users/mayur.rathore/Desktop/js training/Hospital Managment/react/hospital/src/component/httpsecurecomponent.jsx"],"names":["React","Component","SecureCallService","HttpCallComponent","constructor","props","clearReg","setState","UserId","RegUserName","RegPAssword","clearAuth","AuthUserName","AuthPAssword","handleInPutChanges","evt","target","name","value","validateInputs","length","isRegUserNameValid","isFormValid","isRegPAsswordValid","state","message","departments","serv","register","user","UserName","PAssword","registerUser","then","resp","data","catch","error","auth","authUser","sessionStorage","setItem","token","alert","history","push","getValues","getItem","undefined","getData","render","width","bind","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { SecureCallService } from \"./secureservice\";\r\nclass HttpCallComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      UserId: 0,\r\n      RegUserName: \"\",\r\n      RegPAssword: \"\",\r\n      AuthUserName: \"\",\r\n      AuthPAssword: \"\",\r\n      message: \"\",\r\n      departments: [],\r\n      isRegUserNameValid:true,\r\n      isRegPAsswordValid:true,\r\n      isFormValid:true\r\n    };\r\n    this.serv = new SecureCallService();\r\n  }\r\n\r\n  clearReg = () => {\r\n    this.setState({ UserId: 0 });\r\n    this.setState({ RegUserName: \"\" });\r\n    this.setState({ RegPAssword: \"\" });\r\n  };\r\n  clearAuth = () => {\r\n    this.setState({ AuthUserName: \"\" });\r\n    this.setState({ AuthPAssword: \"\" });\r\n  };\r\n  register() {\r\n    let user = {\r\n      UserId: this.state.UserId,\r\n      UserName: this.state.RegUserName,\r\n      PAssword: this.state.RegPAssword,\r\n    };\r\n    this.serv\r\n      .registerUser(user)\r\n      .then((resp) => {\r\n        this.setState({ message: resp.data.message });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ message: `Error Occured ${error.message}` });\r\n      });\r\n  }\r\n\r\n  auth() {\r\n    let user = {\r\n      UserName: this.state.AuthUserName,\r\n      PAssword: this.state.AuthPAssword,\r\n    };\r\n    this.serv\r\n      .authUser(user)\r\n      .then((resp) => {\r\n        this.setState({ message: resp.data.message });\r\n        sessionStorage.setItem(\"token\", resp.data.token);\r\n        alert()\r\n        this.props.history.push('/homepage');\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ message: `Error Occured ${error.message}` });\r\n      });\r\n  }\r\n\r\n  getValues() {\r\n    let token = sessionStorage.getItem(\"token\");\r\n    if (token === undefined) {\r\n      this.setState({ message: `Please send the Auth Header` });\r\n    } else {\r\n      this.serv\r\n        .getData(token)\r\n        .then((resp) => {\r\n          this.setState({ departments: resp.data.message });\r\n          this.setState({ message: `Data Received Successfully` });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ message: `Error Occured ${error.message}` });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInPutChanges = (evt) => {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n    this.validateInputs(evt.target.name,evt.target.value);\r\n  };\r\n\r\n  // validation logic\r\n  validateInputs=(name,value)=>{\r\n    if(name === 'RegUserName'){\r\n        if(value.length === 0) {\r\n            this.setState({isRegUserNameValid:false});\r\n            this.setState({isFormValid:false});\r\n        }else {\r\n            this.setState({isRegUserNameValid:true});\r\n            this.setState({isFormValid:true});\r\n        }\r\n    }\r\n    if(name === 'RegPAssword'){\r\n        if(value.length === 0) {\r\n            this.setState({isRegPAsswordValid:false});\r\n            this.setState({isFormValid:false});\r\n        }else {\r\n            this.setState({isRegPAsswordValid:true});\r\n            this.setState({isFormValid:true});\r\n        }\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-lg\">\r\n      <div></div>\r\n      <table><tr><td>\r\n        <h3>Register User </h3>\r\n          <form className='calculator card' style={{width:500}}>\r\n          UserId\r\n          <input type=\"text\" name=\"UserId\" onChange={this.handleInPutChanges.bind(this)} className=\"form-control\"/>\r\n          User Name\r\n          <input type=\"text\" name=\"RegUserName\" value={this.state.RegUserName} onChange={this.handleInPutChanges.bind(this)} className=\"form-control\" />\r\n          Password\r\n          <input type=\"password\" className=\"form-control\" name=\"RegPAssword\" value={this.state.RegPAssword} onChange={this.handleInPutChanges.bind(this)} />\r\n          <div className=\"alert alert-danger\" hidden={this.state.isRegPAsswordValid}> The Password is Required </div>\r\n          <input type=\"button\" value=\"Clear\" onClick={this.clearReg.bind(this)} className=\"btn btn-primary\"/><br/>\r\n          <input type=\"button\" value=\"Register\" onClick={this.register.bind(this)} disabled={!this.state.isFormValid} className=\"btn btn-success\"/>\r\n          </form >\r\n          </td>\r\n          <td>\r\n            <form className='calculator card' style={{width:500}}>\r\n            <h3>Login user</h3>\r\n            User Name\r\n            <input type=\"text\" name=\"AuthUserName\" className=\"form-control\" value={this.state.AuthUserName} onChange={this.handleInPutChanges.bind(this)}/>\r\n            Password   \r\n            <input type=\"password\" name=\"AuthPAssword\" className=\"form-control\" value={this.state.AuthPAssword} onChange={this.handleInPutChanges.bind(this)}/>\r\n            <input type=\"button\" value=\"Clear\" onClick={this.clearAuth.bind(this)} className=\"btn btn-primary\" />  \r\n            <input\r\n                          type=\"button\"\r\n                          value=\"Login\"\r\n                          onClick={this.auth.bind(this)}\r\n                          className=\"btn btn-success\"\r\n                        /> \r\n               <input\r\n                  type=\"button\"\r\n                  value=\"Get Data\"\r\n                  onClick={this.getValues.bind(this)}\r\n                  className=\"btn btn-danger\"\r\n                />  \r\n\r\n                 <strong>\r\n                    {JSON.stringify(this.state.departments)}\r\n                </strong>\r\n\r\n                <div className=\"container\">\r\n          <strong>{this.state.message}</strong>\r\n        </div>\r\n                      \r\n\r\n            </form>\r\n            </td>\r\n            </tr>\r\n            </table>\r\n</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HttpCallComponent;"]},"metadata":{},"sourceType":"module"}