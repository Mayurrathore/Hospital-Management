{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayur.rathore\\\\Desktop\\\\js training\\\\Hospital Managment\\\\react\\\\hospital\\\\src\\\\component\\\\subcomponent\\\\httpsecurecomponent.jsx\";\nimport React, { Component } from \"react\";\nimport SecureCallService from \"./patient/patientaxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HttpCallComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.clearReg = () => {\n      this.setState({\n        UserId: 0\n      });\n      this.setState({\n        RegUserName: \"\"\n      });\n      this.setState({\n        RegPAssword: \"\"\n      });\n    };\n\n    this.clearAuth = () => {\n      this.setState({\n        AuthUserName: \"\"\n      });\n      this.setState({\n        AuthPAssword: \"\"\n      });\n    };\n\n    this.handleInPutChanges = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n      this.validateInputs(evt.target.name, evt.target.value);\n    };\n\n    this.validateInputs = (name, value) => {\n      if (name === 'RegUserName') {\n        if (value.length === 0) {\n          this.setState({\n            isRegUserNameValid: false\n          });\n          this.setState({\n            isFormValid: false\n          });\n        } else {\n          this.setState({\n            isRegUserNameValid: true\n          });\n          this.setState({\n            isFormValid: true\n          });\n        }\n      }\n\n      if (name === 'RegPAssword') {\n        if (value.length === 0) {\n          this.setState({\n            isRegPAsswordValid: false\n          });\n          this.setState({\n            isFormValid: false\n          });\n        } else {\n          this.setState({\n            isRegPAsswordValid: true\n          });\n          this.setState({\n            isFormValid: true\n          });\n        }\n      }\n    };\n\n    this.state = {\n      UserId: 0,\n      RegUserName: \"\",\n      RegPAssword: \"\",\n      AuthUserName: \"\",\n      AuthPAssword: \"\",\n      message: \"\",\n      departments: [],\n      isRegUserNameValid: true,\n      isRegPAsswordValid: true,\n      isFormValid: true\n    };\n    this.serv = new SecureCallService();\n  }\n\n  register() {\n    let user = {\n      UserId: this.state.UserId,\n      UserName: this.state.RegUserName,\n      PAssword: this.state.RegPAssword\n    };\n    this.serv.registerUser(user).then(resp => {\n      this.setState({\n        message: resp.data.message\n      });\n    }).catch(error => {\n      this.setState({\n        message: `Error Occured ${error.message}`\n      });\n    });\n  }\n\n  auth() {\n    let user = {\n      UserName: this.state.AuthUserName,\n      PAssword: this.state.AuthPAssword\n    };\n    this.serv.authUser(user).then(resp => {\n      this.setState({\n        message: resp.data.message\n      });\n      sessionStorage.setItem(\"token\", resp.data.token);\n      alert();\n      this.props.history.push('/homepage');\n    }).catch(error => {\n      this.setState({\n        message: `Error Occured ${error.message}`\n      });\n    });\n  }\n\n  getValues() {\n    let token = sessionStorage.getItem(\"token\");\n\n    if (token === undefined) {\n      this.setState({\n        message: `Please send the Auth Header`\n      });\n    } else {\n      this.serv.getData(token).then(resp => {\n        this.setState({\n          departments: resp.data.message\n        });\n        this.setState({\n          message: `Data Received Successfully`\n        });\n      }).catch(error => {\n        this.setState({\n          message: `Error Occured ${error.message}`\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Register User \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), \" */}\", /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"calculator card\",\n        style: {\n          width: 500\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Login user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), \"User Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"AuthUserName\",\n          className: \"form-control\",\n          value: this.state.AuthUserName,\n          onChange: this.handleInPutChanges.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), \"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"AuthPAssword\",\n          className: \"form-control\",\n          value: this.state.AuthPAssword,\n          onChange: this.handleInPutChanges.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Login\",\n          onClick: this.auth.bind(this),\n          className: \"btn btn-light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 108\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: this.state.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default HttpCallComponent;","map":{"version":3,"sources":["C:/Users/mayur.rathore/Desktop/js training/Hospital Managment/react/hospital/src/component/subcomponent/httpsecurecomponent.jsx"],"names":["React","Component","SecureCallService","HttpCallComponent","constructor","props","clearReg","setState","UserId","RegUserName","RegPAssword","clearAuth","AuthUserName","AuthPAssword","handleInPutChanges","evt","target","name","value","validateInputs","length","isRegUserNameValid","isFormValid","isRegPAsswordValid","state","message","departments","serv","register","user","UserName","PAssword","registerUser","then","resp","data","catch","error","auth","authUser","sessionStorage","setItem","token","alert","history","push","getValues","getItem","undefined","getData","render","width","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport SecureCallService from \"./patient/patientaxios\"\r\nclass HttpCallComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      UserId: 0,\r\n      RegUserName: \"\",\r\n      RegPAssword: \"\",\r\n      AuthUserName: \"\",\r\n      AuthPAssword: \"\",\r\n      message: \"\",\r\n      departments: [],\r\n      isRegUserNameValid:true,\r\n      isRegPAsswordValid:true,\r\n      isFormValid:true\r\n    };\r\n    this.serv = new SecureCallService();\r\n  }\r\n\r\n  clearReg = () => {\r\n    this.setState({ UserId: 0 });\r\n    this.setState({ RegUserName: \"\" });\r\n    this.setState({ RegPAssword: \"\" });\r\n  };\r\n  clearAuth = () => {\r\n    this.setState({ AuthUserName: \"\" });\r\n    this.setState({ AuthPAssword: \"\" });\r\n  };\r\n  register() {\r\n    let user = {\r\n      UserId: this.state.UserId,\r\n      UserName: this.state.RegUserName,\r\n      PAssword: this.state.RegPAssword,\r\n    };\r\n    this.serv\r\n      .registerUser(user)\r\n      .then((resp) => {\r\n        this.setState({ message: resp.data.message });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ message: `Error Occured ${error.message}` });\r\n      });\r\n  }\r\n\r\n  auth() {\r\n    let user = {\r\n      UserName: this.state.AuthUserName,\r\n      PAssword: this.state.AuthPAssword,\r\n    };\r\n    this.serv\r\n      .authUser(user)\r\n      .then((resp) => {\r\n        this.setState({ message: resp.data.message });\r\n        sessionStorage.setItem(\"token\", resp.data.token);\r\n        alert()\r\n        this.props.history.push('/homepage');\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ message: `Error Occured ${error.message}` });\r\n      });\r\n  }\r\n\r\n  getValues() {\r\n    let token = sessionStorage.getItem(\"token\");\r\n    if (token === undefined) {\r\n      this.setState({ message: `Please send the Auth Header` });\r\n    } else {\r\n      this.serv\r\n        .getData(token)\r\n        .then((resp) => {\r\n          this.setState({ departments: resp.data.message });\r\n          this.setState({ message: `Data Received Successfully` });\r\n        })\r\n        .catch((error) => {\r\n          this.setState({ message: `Error Occured ${error.message}` });\r\n        });\r\n    }\r\n  }\r\n\r\n  handleInPutChanges = (evt) => {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n    this.validateInputs(evt.target.name,evt.target.value);\r\n  };\r\n\r\n  // validation logic\r\n  validateInputs=(name,value)=>{\r\n    if(name === 'RegUserName'){\r\n        if(value.length === 0) {\r\n            this.setState({isRegUserNameValid:false});\r\n            this.setState({isFormValid:false});\r\n        }else {\r\n            this.setState({isRegUserNameValid:true});\r\n            this.setState({isFormValid:true});\r\n        }\r\n    }\r\n    if(name === 'RegPAssword'){\r\n        if(value.length === 0) {\r\n            this.setState({isRegPAsswordValid:false});\r\n            this.setState({isFormValid:false});\r\n        }else {\r\n            this.setState({isRegPAsswordValid:true});\r\n            this.setState({isFormValid:true});\r\n        }\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-lg\">\r\n        <h3>Register User </h3>\r\n          {/* <form className='calculator card' style={{width:500} }>\r\n          UserId\r\n          <input type=\"text\" name=\"UserId\" onChange={this.handleInPutChanges.bind(this)} className=\"form-control\"/>\r\n          User Name\r\n          <input type=\"text\" name=\"RegUserName\" value={this.state.RegUserName} onChange={this.handleInPutChanges.bind(this)} className=\"form-control\" />\r\n          Password\r\n          <input type=\"password\" className=\"form-control\" name=\"RegPAssword\" value={this.state.RegPAssword} onChange={this.handleInPutChanges.bind(this)} />\r\n          <div className=\"alert alert-danger\" hidden={this.state.isRegPAsswordValid}> The Password is Required </div>\r\n          {/* <input type=\"button\" value=\"Clear\" onClick={this.clearReg.bind(this)} className=\"btn btn-primary\"/><br/> */}\r\n          {/* <input type=\"button\" value=\"Register\" onClick={this.register.bind(this)} disabled={!this.state.isFormValid} className=\"btn btn-light\"/> */}\r\n          {/* </form > */} */}\r\n\r\n          \r\n            <form className='calculator card' style={{width:500}}>\r\n            <h3>Login user</h3>\r\n            User Name\r\n            <input type=\"text\" name=\"AuthUserName\" className=\"form-control\" value={this.state.AuthUserName} onChange={this.handleInPutChanges.bind(this)}/>\r\n            Password   \r\n            <input type=\"password\" name=\"AuthPAssword\" className=\"form-control\" value={this.state.AuthPAssword} onChange={this.handleInPutChanges.bind(this)}/>\r\n            {/* <input type=\"button\" value=\"Clear\" onClick={this.clearAuth.bind(this)} className=\"btn btn-primary\" /> <br/>  */}\r\n            <input type=\"button\" value=\"Login\" onClick={this.auth.bind(this)} className=\"btn btn-light\" /> <br/>\r\n            {/* <input type=\"button\" value=\"Get Data\" onClick={this.getValues.bind(this)} className=\"btn btn-danger\" />   */}\r\n            {/* <strong> {JSON.stringify(this.state.departments)}</strong> */}\r\n            <div className=\"container\"> <strong>{this.state.message}</strong></div>\r\n                      \r\n\r\n            </form>\r\n\r\n            \r\n            \r\n</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HttpCallComponent;"]},"metadata":{},"sourceType":"module"}